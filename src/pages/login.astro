---
import Hero from "@/components/Hero.astro"
import Layout from "@/layouts/Layout.astro"
import { SignIn } from "auth-astro/components"
import { getSession } from "auth-astro/server"
const session = await getSession(Astro.request)

// let jwtPosted = false
// let newToken = null

// if (session?.jwt && !jwtPosted) {
//   const jwt = session.jwt
//   console.log(jwt)

//   try {
//     const response = await fetch("http://localhost:8080/auth/google", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({ token: jwt }),
//     })

//     if (response.ok) {
//       const data = await response.json()

//       newToken = data.token
//       Astro.cookies.set("auth_token", newToken, {
//         path: "/",
//         httpOnly: true,
//         secure: true,
//       })

//       jwtPosted = true
//     } else {
//       console.error("Error al enviar el JWT:", response.statusText)
//     }
//   } catch (error) {
//     console.error("Error en la solicitud:", error)
//   }
// }
---

<Layout title="Inicio de sesion">
  <Hero image="/hero.webp">
    <section class="flip-card">
      <article class="face front">
        <form
          id="login-form"
          class="mx-auto bg-white p-3 rounded-4"
          style="width: 400px;"
        >
          <h3 class="text-center text-success fw-bold">Iniciar sesion</h3>
          <hr class="border border-primary mx-3 mt-0" />
          <div class="mb-3">
            <label for="inputEmailLogin" class="form-label text-dark">
              Correo electronico
            </label>
            <input
              type="email"
              class="form-control"
              id="inputEmailLogin"
              name="correo"
              autocomplete="email"
            />
          </div>
          <div class="mb-3">
            <label for="inputPasswordLogin" class="form-label text-dark">
              Contraseña
            </label>
            <input
              type="password"
              class="form-control"
              id="inputPasswordLogin"
              autocomplete="current-password"
              name="contraseña"
            />
            <p class="form-text mt-0">Olvido su contraseña?</p>
          </div>
          <div class="d-flex gap-2 justify-content-center">
            <SignIn
              class={"p-1 d-flex align-items-center gap-2 btn btn-primary text-white fw-bold"}
              provider="google"
              type="button"
            >
              Con Google
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M12 2a9.96 9.96 0 0 1 6.29 2.226a1 1 0 0 1 .04 1.52l-1.51 1.362a1 1 0 0 1 -1.265 .06a6 6 0 1 0 2.103 6.836l.001 -.004h-3.66a1 1 0 0 1 -.992 -.883l-.007 -.117v-2a1 1 0 0 1 1 -1h6.945a1 1 0 0 1 .994 .89c.04 .367 .061 .737 .061 1.11c0 5.523 -4.477 10 -10 10s-10 -4.477 -10 -10s4.477 -10 10 -10z"
                ></path>
              </svg>
            </SignIn>
            <button type="submit" class="btn btn-primary text-white fw-bold">
              Entrar
            </button>
          </div>
          <hr class="border border-primary mx-3 mb-0" />
          <p class="form-text mt-2 m-0">¿No tienes una cuenta?</p>
          <button
            type="button"
            id="register-btn"
            class="btn btn-primary text-white fw-bold"
          >
            Registrate
          </button>
        </form>
      </article>
      <article class="face back">
        <form class="mx-auto bg-white p-3 rounded-4" style="width: 400px;">
          <h3 class="text-center text-success fw-bold">Registro</h3>
          <hr class="border border-primary mx-3 mt-0" />
          <div class="mb-3">
            <label for="inputEmailRegister" class="form-label text-dark">
              Correo electronico
            </label>
            <input
              type="email"
              class="form-control"
              id="inputEmailRegister"
              name="correo"
              autocomplete="email"
            />
          </div>
          <div class="mb-3">
            <label for="inputPasswordRegister" class="form-label text-dark">
              Contraseña
            </label>
            <input
              type="password"
              class="form-control"
              id="inputPasswordRegister"
              autocomplete="new-password"
              name="contraseña"
            />
          </div>
          <div class="d-flex gap-2 justify-content-center">
            <button type="submit" class="btn btn-primary text-white fw-bold">
              Registrarse
            </button>
          </div>
          <hr class="border border-primary mx-3 mb-0" />
          <p class="form-text mt-2">¿Ya tienes una cuenta?</p>
          <button
            type="button"
            id="login-btn"
            class="btn btn-primary text-white fw-bold"
          >
            inicia sesión
          </button>
        </form>
      </article>
    </section>
  </Hero>
  <script>
    const registerBtn = document.getElementById("register-btn")
    const loginBtn = document.getElementById("login-btn")
    const flipCard = document.querySelector(".flip-card")

    if (registerBtn && loginBtn && flipCard) {
      registerBtn.addEventListener("click", () => {
        flipCard.classList.add("flipped")
      })

      loginBtn.addEventListener("click", () => {
        flipCard.classList.remove("flipped")
      })
    }
  </script>
  <script>
    const loginForm = document.getElementById("login-form")
    if (loginForm) {
      loginForm.addEventListener("submit", async (event: any) => {
        event.preventDefault()
        const data = Object.fromEntries(new FormData(event.target))
        try {
          const response = await fetch("http://localhost:8080/loggin/usuario", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          })

          if (response.ok) {
            console.log("Inicio de sesión exitoso")
          } else {
            console.error("Error al iniciar sesión:", response.statusText)
          }
        } catch (error) {
          console.error("Error en la solicitud:", error)
        }
      })
    }
  </script>
  <script>
    const registerForm = document.getElementById("register-form")
    if (registerForm) {
      registerForm.addEventListener("submit", async (event: any) => {
        event.preventDefault()
        const data = Object.fromEntries(new FormData(event.target))
        try {
          const response = await fetch("http://localhost:8080/registro", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          })

          if (response.ok) {
            console.log("Registro exitoso")
          } else {
            console.error("Error al registar:", response.statusText)
          }
        } catch (error) {
          console.error("Error en la solicitud:", error)
        }
      })
    }
  </script>
</Layout>

<style>
  .flip-card {
    position: relative;
    width: 400px;
    height: 405px;
    z-index: 2;
    transform-style: preserve-3d;
    transition: transform 0.5s;
  }

  .face {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    backface-visibility: hidden;
    border-radius: 10px;
    overflow: hidden;
  }

  .front {
    transform: perspective(600px) rotateY(0deg);
  }

  .back {
    transform: perspective(600px) rotateY(180deg);
  }

  .flipped {
    transform: perspective(600px) rotateY(180deg);
  }
</style>
